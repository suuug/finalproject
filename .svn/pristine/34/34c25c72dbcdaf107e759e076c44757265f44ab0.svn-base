<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>


<style>
	.main_card{
 		height: 40vh; 
	}
 	.main_chead{ 
 		background-color: white; 
	} 
	.flex_container{
		display: flex;
		justify-content: space-between;
	}
	.vh65{
		height: 83vh;
		padding-bottom: 1.5rem; 
	}
	.mainTb{
		table-layout:fixed; 
	}

	.mainTb th, .mainTb td {
		padding: 2px;
		border-bottom: 1px solid #f3f3f3;
	}
	
	.mainTr:hover {
		background-color: #f3f3f3;
	}
	.vh30{
		height: 30vh;
	}
	.vh25{
		height: 22vh;
	}
	.card-body{
		overflow: auto;
	}

	
</style>

<div class="row" style="height:100%;">
<sec:authentication property="principal.user" var="user"/>
    <div class="col-lg-3">
<!-- 			<div class="card border-left-primary shadow h-100 py-2"> -->
        <div class="card  shadow mb-4">
            <div class="card-body atndnBox vh65">
            	<div class="mainImgBox ml-5 mr-5"  style="height: auto;">
            		<img src="${user.atchPath }" style="height: 20vh;">
            	</div>
            	<div>
            		<p>${user.empName } ${user.deptName }</p>
	            	<fmt:formatDate value="${atndnDaily.atndnStrtDt }" pattern="yyyy-MM-dd hh:mm:ss" var="atndnStrtDt"/>
	            	<fmt:formatDate value="${atndnDaily.atndnEndDt }" pattern="yyyy-MM-dd hh:mm:ss" var="atndnEndDt" />
	            	<p>출근시간 : <span id="startDt">${atndnStrtDt }</span></p>
            		<p>퇴근시간 : <span id="endDt">${atndnEndDt }</span></p>
            	</div>
            	
            	<c:if test="${atndnDaily.atndnStrtDt eq null }" >
	            	<div>
						<button id="startBtn" class="btn btn-danger waves-effect waves-light"
							type="button" onclick="start();">출근하기</button>
					</div>
            	</c:if>
            	
            	<c:if test="${atndnDaily.atndnStrtDt ne null && atndnDaily.atndnEndDt eq null}" >
					<div>
						<button id="endBtn" class="btn btn-primary  waves-effect waves-light"
							type="button" onclick="end();">퇴근하기</button>
					</div>
            	</c:if>

            
            </div>
        </div>
    </div>

    <div class="col-lg-4 ">
    
	    <div id="autho-card" class="card main_card shadow mb-4 ">
	        <div class="card-header main_chead flex_container py-3" >
	        	<div class="flex_item w-100">
		        	<ul class="nav nav-tabs" role="tablist">
		                <li class="nav-item" data-id="receiveAutho" style="display: none;">
		                    <a class="nav-link" data-id="" data-bs-toggle="tab" href="#profile" role="tab">
		                        <span class="d-block d-sm-none"><i class="far fa-user"></i></span>
		                        <span class="d-none d-sm-block">받은결제</span>    
		                    </a>
		                </li>
		                <li class="nav-item" data-id="sendAutho">
		                    <a class="nav-link active" data-id="" data-bs-toggle="tab" href="#home" role="tab">
		                        <span class="d-block d-sm-none"><i class="fas fa-home"></i></span>
		                        <span class="d-none d-sm-block">보낸결제</span>    
		                    </a>
		                </li>
		            </ul>
	        	</div>
	        	<div class="flex_item plusIcon">
		            <i class="fa fa-plus "></i>
	        	</div>
	       	</div>
	       	
	    	<div class="card-body vh30 p-0 mx-3">
	    		<div class="table-container vh25">
					
				</div>
				<div class="page-container">
					
				</div>
	    	</div>
	    </div>
    
	    <div id="email-card" class="card main_card shadow mb-4 ">
	        <div class="card-header main_chead flex_container py-3">
	        	<div class="flex_item w-100">
		        	<ul class="nav nav-tabs" role="tablist">
		                <li class="nav-item" data-id="unreadMail">
		                    <a class="nav-link active" data-bs-toggle="tab" href="#home" role="tab">
		                        <span class="d-block d-sm-none"><i class="fas fa-home"></i></span>
		                        <span class="d-none d-sm-block">읽지않은메일</span>    
		                    </a>
		                </li>
		                <li class="nav-item" data-id="sendMail">
		                    <a class="nav-link" data-bs-toggle="tab" href="#profile" role="tab">
		                        <span class="d-block d-sm-none"><i class="far fa-user"></i></span>
		                        <span class="d-none d-sm-block">보낸메일</span>    
		                    </a>
		                </li>
		            </ul>
	        	</div>
	        	<div class="flex_item plusIcon">
		            <i class="fa fa-plus "></i>
	        	</div>
	       	</div>
	       	
	    	<div class="card-body vh30 p-0 mx-3">
	    		<div class="table-container vh25">
					
				</div>
				<div class="page-container">
					
				</div>
	    	</div>
	    </div>

    </div>

    <div class="col-lg-4">
            

	    <div id="work-card" class="card main_card shadow mb-4 " data-id="work">
	        <div class="card-header main_chead flex_container py-3" >
	        	<div class="flex_item w-100">
		        	<ul class="nav nav-tabs" role="tablist">
		                <li class="nav-item" data-id="getWork">
		                    <a class="nav-link active" data-id="get" data-bs-toggle="tab" href="#home" role="tab">
		                        <span class="d-block d-sm-none"><i class="fas fa-home"></i></span>
		                        <span class="d-none d-sm-block">받은요청</span>    
		                    </a>
		                </li>
		                <li class="nav-item" data-id="giveWork">
		                    <a class="nav-link" data-id="give" data-bs-toggle="tab" href="#profile" role="tab">
		                        <span class="d-block d-sm-none"><i class="far fa-user"></i></span>
		                        <span class="d-none d-sm-block">보낸요청</span>    
		                    </a>
		                </li>
		            </ul>
	        	</div>
	        	<div class="flex_item plusIcon">
		            <i class="fa fa-plus "></i>
	        	</div>
	       	</div>
	       	
	    	<div class="card-body vh30 p-0 mx-3">
	    		<div class="table-container vh25">
					
				</div>
				<div class="page-container">
					
				</div>
	    	</div>
	    </div>
	
	
	    <div id="notice-card" class="card main_card shadow mb-4 " data-id="notice">
	        <div class="card-header main_chead flex_container py-3" >
	        	<div class="flex_item w-100">
		        	<ul class="nav nav-tabs" role="tablist">
		                <li class="nav-item" data-id="notice">
		                    <a class="nav-link active" data-bs-toggle="tab" href="#home" role="tab">
		                        <span class="d-block d-sm-none"><i class="fas fa-home"></i></span>
		                        <span class="d-none d-sm-block">공지사항</span>    
		                    </a>
		                </li>
		            </ul>
	        	</div>
	        	<div class="flex_item plusIcon">
		            <i class="fa fa-plus "></i>
	        	</div>
	       	</div>
	       	
	    	<div class="card-body vh30 p-0 mx-3">
	    		<div class="table-container vh25">
					
				</div>
				<div class="page-container">
					
				</div>
	    	</div>
	    </div>

    </div>


</div>

<script src="/resources/js/project.js"></script>
<script>
	
	//미래 날짜형식 조작을 위해서 억지로 작성
	function getTodayDate() {
		var v_today = new Date();
		var v_year = v_today.getFullYear();
		var v_month = v_today.getMonth() + 1;
		var v_date = v_today.getDate();
		var v_hour = v_today.getHours();
		var v_min = v_today.getMinutes();
		var v_sec = v_today.getSeconds();

		if (v_month < 10) {
			v_month = "0" + v_month;
		}
		if (v_date < 10) {
			v_date = "0" + v_date;
		}
		if (v_hour < 10) {
			v_hour = "0" + v_hour;
		}
		if (v_min < 10) {
			v_min = "0" + v_min;
		}
		if (v_sec < 10) {
			v_sec = "0" + v_sec;
		}

		var v_datetime = v_year + "-" + v_month + "-" + v_date + "-" + v_hour
				+ ":" + v_min + ":" + v_sec;
		return v_datetime;
	}

	function start() {

		var v_realDateTime = getTodayDate().toString();
// 		alert(v_realDateTime)	;  //체킁

		$.ajax({
			type : "get",
			dataType : "json",
			url : "/attendance/recordStart",
			data : "sdate=" + v_realDateTime,
			contentType : "application/text; charset=UTF-8",
			success : function(msg) {
// 				console.log(msg["noticeMsg"]);
// 				alert(msg);
				alert(msg["noticeMsg"]);
				if(msg["noticeMsg"] == "출근 처리 되었습니다."){
					$("#startDt").text(v_realDateTime);
					
					var btn = '<div><button id="endBtn" class="btn btn-primary  waves-effect waves-light"';
					btn += 'type="button" onclick="end();">퇴근하기</button></div>';
					
					$(".atndnBox").append(btn);
					
					$("#startBtn").remove();
				}
			}

		})
	};

	// 	console.log(v_start);

	function end() {

		var v_realDateTime = getTodayDate().toString();

		$.ajax({
			type : "get",
			dataType : "text",
			url : "/attendance/recordEnd",
			data : "sdate=" + v_realDateTime,
			contentType : "application/text; charset=UTF-8",
			success : function(msg) {
				alert(msg);
				if(msg == "퇴근 처리 되었습니다."){
					$("#endDt").text(v_realDateTime);
					$("#endBtn").remove();
				}
				
			}

		})

		// 	var v_end = document.querySelector("#time");
		// 		var v_end = document.querySelector("#time").innerHTML;
		// 	alert(v_end);	
		// 	console.log(v_end);	
	}
	
	// 이메일 리스트
	function mainEmail(p_currentPage, division) {
// 	    	console.log("division" , division);
	    var tableContainer;
	    var pageContainer;
	    
	    var currentPage = 0;
//	        console.log("p_currentPage : ", p_currentPage);
	    
	    if(p_currentPage == undefined){
	        currentPage = 1;
	    }else if(p_currentPage == "previous"){
	        currentPage = page.startPage-page.pagingCount;
	        
	    }else if(p_currentPage == "next"){
	        currentPage = page.startPage+page.pagingCount;
	        
	    }else{
	        currentPage = parseInt(p_currentPage);
	    
	    }

	    var size = 6;
	    var start = currentPage * size - (size - 1);
	    var end = currentPage * size;
	    
	    $.ajax({
	        url: "/mainMailList",
	        type: "POST",
	        contentType: "application/json; charset=utf-8",
	        data: JSON.stringify({
	            'currentPage': currentPage,
	            'userId': userId,
	            'size': size,
	            'start': start,
	            'end': end,
	            'division': division,
	        }),
	        success: function (result) {
// 	           console.log("mail() : ", result);
// 	           console.log(result["mailList"]);
	            
	            var table = "";
	            table += '<table class="mainTb" style="width: 100%; table-layout:fixed;">';
	            table += '<tr>';
	            table += '<th style="width: 10%;"></th>';
	            table += '<th style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>제목 </nobr></th>';
	            table += '<th style="width: 20%;">발신자</th>';
	            table += '<th style="width: 30%;">수신일</th>';
	            table += '</tr>';
	            
	            var res = result["mailList"]
	            $.each(res, function (i, v) {
	            	
	                var brdWrtDt = toStringYmd(new Date(v.emailWrtDt))
	                if(division == "unread"){
	                    table += '<tr class="mainTr" onClick="location.href=\'/email/reMailDetail?emailId='+v.emailId+'\'" >';
                	}else{
	                    table += '<tr class="mainTr" onClick="location.href=\'/email/sendMailDetail?emailId='+v.emailId+'\'" >';
                	}
	                table += '<td>'+v.rnum +'</td>';
	                table += '<td style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>'+v.emailTitle +'</nobr></td>';
	                table += '<td>'+v.empName +'</td>';
	                var emailWrtDt = toStringYmd(new Date(v.emailWrtDt));
	                table += '<td>'+emailWrtDt +'</td>';
	                table += '</tr>';
	            })
	                table += '</table>';

// 	            console.log(table);
// 	            console.log($("#email-card"));
	            $("#email-card .table-container").html(table);
	            
	            var page = result["page"];
	            var total = result["total"];
	            var pageCode = '';
	            pageCode += '<ul class="pagination pagination-rounded">';
	            
//	    				<!-- Previous 시작 -->
	            if(page.startPage<page.pagingCount+1){
	                pageCode += '<li id="previous" class="page-item disabled">';
	            }else{
	                pageCode += '<li id="previous" class="page-item ">';
	                
	            }
	            
	            pageCode += '<span class="page-link"><i class="mdi mdi-chevron-left"></i></span>';
	            pageCode += '</li>';
//	    				<!-- Previous 끝 -->
//	    				<!-- Page번호 시작 -->
	            for(var pNo=page.startPage; pNo <= page.endPage; pNo++){
	                if(page.currentPage == pNo){
	                    pageCode += '<li class="page-item pageNo active" >';
	                    
	                }else{
	                    pageCode += '<li class="page-item pageNo" >';
	                    
	                }
	                pageCode += '<a class="page-link" href="#">'+pNo+'</a></li>';
	                
	            }
//	    				<!-- Page번호 끝 -->
//	    				<!-- Next 시작 -->
	            if(page.endPage>=page.totalPages){
	                pageCode += '<li id="next" class="page-item disabled">';
	            }else{
	                pageCode += '<li id="next" class="page-item">';
	                
	            }
	            pageCode += '<a class="page-link" href="#"><i class="mdi mdi-chevron-right"></i></a>';
	            pageCode += '</li>';
//	    				<!-- Next 끝 -->
	            pageCode += '</ul>';
	            
	            $("#email-card .page-container").html(pageCode);
	            
	            var tooltipTriggerList = [].slice.call(document.querySelectorAll(
	                '[data-bs-toggle="tooltip"]'))
	            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
	                return new bootstrap.Tooltip(tooltipTriggerEl)
	            })

	        },
	        error: function (xhr) {
	            alert(xhr.status)

	        },
	        beforeSend: function (xhr) {
	            xhr.setRequestHeader(header, token)
	        },
	        dataType: "json"
	    })
	}

	
	// 공지사항리스트
	function mainNotice(p_currentPage) {
    	
    	var tableContainer;
    	var pageContainer;
    	
        var currentPage = 0;
//        console.log("p_currentPage : ", p_currentPage);
        
        if(p_currentPage == undefined){
            currentPage = 1;
        }else if(p_currentPage == "previous"){
            currentPage = page.startPage-page.pagingCount;
            
        }else if(p_currentPage == "next"){
            currentPage = page.startPage+page.pagingCount;
            
        }else{
            currentPage = parseInt(p_currentPage);
        
        }

        var size = 6;
        var start = currentPage * size - (size - 1);
        var end = currentPage * size;
        
        $.ajax({
            url: "/mainNoticeList",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                'main': "main",
                'userId': userId,
                'currentPage': currentPage,
                'size': size,
                'start': start,
                'end': end,
//                 'keyWord': "keyWord",
            }),
            success: function (result) {
//            		console.log("notice() : ", result);
//                console.log(result["noticeList"]);
                
                var table = "";
                table += '<table class="mainTb" style="width: 100%; table-layout:fixed;">';
                table += '<tr>';
                table += '<th style="width: 5%;"></th>';
                table += '<th style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>제목 </nobr></th>';
                table += '<th style="width: 20%;">작성일자</th>';
                table += '<th style="width: 20%;">조회수</th>';
                table += '</tr>';
                
                var res = result["noticeList"]
                $.each(res, function (i, v) {
                    if(v.brdWrtDt != null){
                    	var brdWrtDt = toStringYmd(new Date(v.brdWrtDt))
                    }else{
                    	var brdWrtDt = "-"
                    }
//     				console.log("brdWrtDt", brdWrtDt);
    				
                    table += '<tr class="mainTr" onClick="location.href=\'/notice/detail?brdId='+v.brdId+'&currentPage=1\'" >';
                    table += '<td>'+v.rnum +'</td>';
                    table += '<td style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>'+v.brdTitle +'</nobr></td>';
                    table += '<td>'+brdWrtDt +'</td>';
                    table += '<td>'+v.brdHit +'</td>';
                    table += '</tr>';
                })
    				table += '</table>';

// 				console.log(table);
// 				console.log($("#notice-card"));
                $("#notice-card .table-container").html(table);
                
                var page = result["page"];
                var total = result["total"];
                var pageCode = '';
                pageCode += '<ul class="pagination pagination-rounded">';
                
//    				<!-- Previous 시작 -->
                if(page.startPage<page.pagingCount+1){
                    pageCode += '<li id="previous" class="page-item disabled">';
                }else{
                    pageCode += '<li id="previous" class="page-item ">';
                    
                }
                
                pageCode += '<span class="page-link"><i class="mdi mdi-chevron-left"></i></span>';
                pageCode += '</li>';
//    				<!-- Previous 끝 -->
//    				<!-- Page번호 시작 -->
                for(var pNo=page.startPage; pNo <= page.endPage; pNo++){
                    if(page.currentPage == pNo){
                        pageCode += '<li class="page-item pageNo active" >';
                        
                    }else{
                        pageCode += '<li class="page-item pageNo" >';
                        
                    }
                    pageCode += '<a class="page-link" href="#">'+pNo+'</a></li>';
                    
                }
//    				<!-- Page번호 끝 -->
//    				<!-- Next 시작 -->
                if(page.endPage>=page.totalPages){
                    pageCode += '<li id="next" class="page-item disabled">';
                }else{
                    pageCode += '<li id="next" class="page-item">';
                    
                }
                pageCode += '<a class="page-link" href="#"><i class="mdi mdi-chevron-right"></i></a>';
                pageCode += '</li>';
//    				<!-- Next 끝 -->
                pageCode += '</ul>';
                
                $("#notice-card .page-container").html(pageCode);
                
                var tooltipTriggerList = [].slice.call(document.querySelectorAll(
                    '[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })

            },
            error: function (xhr) {
                alert(xhr.status)

            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader(header, token)
            },
            dataType: "json"
        })
    }

	
	// 홈업무리스트
    function mainWork(p_currentPage, division) {
//    		console.log(division);
    	
    	var tableContainer;
    	var pageContainer;
    	
        var currentPage = 0;
//        console.log("p_currentPage : ", p_currentPage);
        
        if(p_currentPage == undefined){
            currentPage = 1;
        }else if(p_currentPage == "previous"){
            currentPage = page.startPage-page.pagingCount;
            
        }else if(p_currentPage == "next"){
            currentPage = page.startPage+page.pagingCount;
            
        }else{
            currentPage = parseInt(p_currentPage);
        
        }

        var size = 6;
        var start = currentPage * size - (size - 1);
        var end = currentPage * size;
        
        $.ajax({
            url: "/project/mainWorkList",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                'empId': userId,
                'division': division,
                'main': "main",
                'currentPage': currentPage,
                'size': size,
                'start': start,
                'end': end,
                'keyWord': "keyWord",
            }),
            success: function (result) {
//            	console.log(result);
//                console.log(result["workList"]);
                
                var table = "";
                table += '<table class="mainTb" style="width: 100%; table-layout:fixed;">';
                table += '<tr>';
                table += '<th style="width: 10%;"></th>';
                table += '<th style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>업무제목 </nobr></th>';
                table += '<th style="width: 20%;">시작일</th>';
                table += '<th style="width: 20%;">마감일</th>';
                table += '</tr>';
                
                var res = result["workList"]
                $.each(res, function (i, v) {
                    
    					
                    table += '<tr class="mainTr" data-workId=" '+ v.workId +' ">';
                    table += '<td>';

                    if (v.workState == null) {
                        table += '-';
                    }
                    if (v.workState == "요청") {
                        table +=
                            '<span class="badge rounded-pill bg-info">' +
                            v.workState + '</span>';
                    }
                    if (v.workState == "진행") {
                        table +=
                            '<span class="badge rounded-pill bg-success ">' +
                            v.workState + '</span >';
                    }
                    if (v.workState == "완료") {
                        table +=
                            '<span class="badge rounded-pill bg-dark">' +
                            v.workState + '</span >';
                    }
                    if (v.workState == "이슈") {
                        table += '<span class="badge rounded-pill bg-danger ">' +
                            v.workState + '</span >';
                    }   
                    if(v.workStrtDt != null || v.workEndDt != null){
                    	var workStrtDt = toStringYmd(new Date(v.workStrtDt))
                    	var workEndDt = toStringYmd(new Date(v.workEndDt))
                    }else{
                    	var workStrtDt = "-"
                    	var workEndDt = "-"
                    	
                    }
                    table += '</td>';
                    table += '<td style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>'+v.workTitle +'</nobr></td>';
                    table += '<td>'+workStrtDt +'</td>';
                    table += '<td>'+workEndDt +'</td>';
                    table += '</tr>';
                })
    				table += '</table>';

// 				console.log(table);
// 				console.log($("#work-card"));
                $("#work-card .table-container").html(table);
                
                var page = result["page"];
                var total = result["total"];
                var pageCode = '';
                pageCode += '<ul class="pagination pagination-rounded">';
                
//    				<!-- Previous 시작 -->
                if(page.startPage<page.pagingCount+1){
                    pageCode += '<li id="previous" class="page-item disabled">';
                }else{
                    pageCode += '<li id="previous" class="page-item ">';
                    
                }
                
                pageCode += '<span class="page-link"><i class="mdi mdi-chevron-left"></i></span>';
                pageCode += '</li>';
//    				<!-- Previous 끝 -->
//    				<!-- Page번호 시작 -->
                for(var pNo=page.startPage; pNo <= page.endPage; pNo++){
                    if(page.currentPage == pNo){
                        pageCode += '<li class="page-item pageNo active" >';
                        
                    }else{
                        pageCode += '<li class="page-item pageNo" >';
                        
                    }
                    pageCode += '<a class="page-link" href="#">'+pNo+'</a></li>';
                    
                }
//    				<!-- Page번호 끝 -->
//    				<!-- Next 시작 -->
                if(page.endPage>=page.totalPages){
                    pageCode += '<li id="next" class="page-item disabled">';
                }else{
                    pageCode += '<li id="next" class="page-item">';
                    
                }
                pageCode += '<a class="page-link" href="#"><i class="mdi mdi-chevron-right"></i></a>';
                pageCode += '</li>';
//    				<!-- Next 끝 -->
                pageCode += '</ul>';
                
                $("#work-card .page-container").html(pageCode);
                
                var tooltipTriggerList = [].slice.call(document.querySelectorAll(
                    '[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })

            },
            error: function (xhr) {
                alert(xhr.status)

            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader(header, token)
            },
            dataType: "json"
        })
    }
	
 // 결재 리스트
    function mainAutho(p_currentPage, division) {
//             console.log("division" , division);

        var tableContainer;
        var pageContainer;
        
        var currentPage = 0;
//    	        console.log("p_currentPage : ", p_currentPage);
        
        if(p_currentPage == undefined){
            currentPage = 1;
        }else if(p_currentPage == "previous"){
            currentPage = page.startPage-page.pagingCount;
            
        }else if(p_currentPage == "next"){
            currentPage = page.startPage+page.pagingCount;
            
        }else{
            currentPage = parseInt(p_currentPage);
        
        }

        var size = 6;
        var start = currentPage * size - (size - 1);
        var end = currentPage * size;
        
        $.ajax({
            url: "/mainAuthoList",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                'currentPage': currentPage,
                'userId': userId,
                'size': size,
                'start': start,
                'end': end,
                'division': division,
            }),
            success: function (result) {
//                console.log("autho() : ", result);
//                console.log(result["authoList"]);
                
                var table = "";
                table += '<table class="mainTb" style="width: 100%; table-layout:fixed;">';
                table += '<tr>';
                table += '<th style="width: 10%;"></th>';
                table += '<th style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>제목 </nobr></th>';
                table += '<th style="width: 20%;">기안자</th>';
                table += '<th style="width: 30%;">작성일</th>';
                table += '</tr>';
                
                var res = result["authoList"]
                $.each(res, function (i, v) {
                   	
                	if(division == "send"){
	                    table += '<tr class="mainTr" onClick="location.href=\'/autho/sendDocDetail?docId='+v.docId+'\'" >';
                	}else{
	                    table += '<tr class="mainTr" onClick="location.href=\'/autho/receiveDocDetail?docId='+v.docId+'&atrzAprvId='+userId+'\'" >';
                	}
//                     console.log("v.atrzState",v.atrzState);
                    var atrzState = ""
                    if(v.atrzState == '미결재'){
                    	atrzState += '<span class="badge rounded-pill bg-danger pt-1" style="float:right; font-size: 11px;">미결재</span>';
                    	
                    }
                    if(v.atrzState == '진행중'){
                    	atrzState += '<span class="badge rounded-pill bg-primary pt-1" style="float:right; font-size: 11px;">진행중</span>';
                    	
                    }
                    if(v.atrzState == '결재완료'){
                    	atrzState += '<span class="badge rounded-pill bg-success pt-1" style="float:right; font-size: 11px;">결재완료</span>';
                    	
                    }
                    if(v.atrzState == '반려'){
                    	atrzState += '<span class="badge rounded-pill bg-info pt-1" style="float:right; font-size: 11px;">반려</span>';
                    	
                    }
                    if(v.atrzState == '대기중'){
                    	atrzState += '<span class="badge rounded-pill bg-secondary pt-1" style="float:right; font-size: 11px;">대기중</span>';
                    }
// 		         	console.log("atrzState", atrzState)
                    table += '<td>'+atrzState+'</td>';
//                     table += '<td><span class="badge rounded-pill bg-secondary pt-1" style="float:right; font-size: 11px;">대기중</span></td>';
                    table += '<td style="width: 40%; text-overflow:ellipsis; overflow:hidden;"><nobr>'+v.docTitle +'</nobr></td>';
                    table += '<td>'+v.docWrtrName +'</td>';
                    var docWrtDt = toStringYmd(new Date(v.docWrtDt));
                    table += '<td>'+docWrtDt +'</td>';
                    table += '</tr>';
                })
                    table += '</table>';

//                 console.log(table);
//                 console.log($("#autho-card"));
                $("#autho-card .table-container").html(table);
                
                var page = result["page"];
                var total = result["total"];
                var pageCode = '';
                pageCode += '<ul class="pagination pagination-rounded">';
                
//    	    				<!-- Previous 시작 -->
                if(page.startPage<page.pagingCount+1){
                    pageCode += '<li id="previous" class="page-item disabled">';
                }else{
                    pageCode += '<li id="previous" class="page-item ">';
                    
                }
                
                pageCode += '<span class="page-link"><i class="mdi mdi-chevron-left"></i></span>';
                pageCode += '</li>';
//    	    				<!-- Previous 끝 -->
//    	    				<!-- Page번호 시작 -->
                for(var pNo=page.startPage; pNo <= page.endPage; pNo++){
                    if(page.currentPage == pNo){
                        pageCode += '<li class="page-item pageNo active" >';
                        
                    }else{
                        pageCode += '<li class="page-item pageNo" >';
                        
                    }
                    pageCode += '<a class="page-link" href="#">'+pNo+'</a></li>';
                    
                }
//    	    				<!-- Page번호 끝 -->
//    	    				<!-- Next 시작 -->
                if(page.endPage>=page.totalPages){
                    pageCode += '<li id="next" class="page-item disabled">';
                }else{
                    pageCode += '<li id="next" class="page-item">';
                    
                }
                pageCode += '<a class="page-link" href="#"><i class="mdi mdi-chevron-right"></i></a>';
                pageCode += '</li>';
//    	    				<!-- Next 끝 -->
                pageCode += '</ul>';
                
                $("#autho-card .page-container").html(pageCode);
                
                var tooltipTriggerList = [].slice.call(document.querySelectorAll(
                    '[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })

            },
            error: function (xhr) {
                alert(xhr.status)

            },
            beforeSend: function (xhr) {
                xhr.setRequestHeader(header, token)
            },
            dataType: "json"
        })
    }
	
	$(function(){
		mainWork(1, "get");
		mainAutho(1, "send");
		mainNotice(1);
		mainEmail(1, "unread");		
		
// 		console.log($("#user").val())
// 		console.log($("#user2").val())
		// 페이지 버튼 클릭시
		$(document).on("click", ".main_card .pageNo", function(){
			var cardId = $(this).parents(".main_card").data("id");
			var currentPage;
			
			if(cardId == "work"){
				var division = $(this).parents(".main_card").find(".active").data("id");
// 				console.log("division : " , division);
	
				currentPage = $(this).text();
				mainWork(currentPage , division);
				
			}
			
			if(cardId == "notice"){
				currentPage = $(this).text();
				mainNotice(currentPage);
				
			}
		})
		$(document).on("click", ".main_card #previous", function(){
			var division = $(this).parents("#work-card").find(".active").data("id");
			mainWorkList(this, "previous", division);
			
		})
		$(document).on("click", ".main_card #next", function(){
			var division = $(this).parents("#work-card").find(".active").data("id");
			mainWorkList(this, "next", division);
			
		})
		
		$(".plusIcon").on("click", function(){
			var navId = $(this).parents(".main_card").find(".active").parents(".nav-item").data('id');
			if(navId == "getWork"){
				location.href = "/project";
			}
			
			if(navId == "giveWork"){
				location.href = "/project";
			}
			
			if(navId == "unreadMail"){
				location.href = "/email/reMailBox";
			}
			
			if(navId == "sendMail"){
				location.href = "/email/sendMailBox";
				
			}
			
			if(navId == "receiveAutho"){
				location.href = "/autho/receiveDoc";
			}
			
			if(navId == "sendAutho"){
				location.href = "/autho/sendDoc";
			}
			
			if(navId == "notice"){
				location.href = "/notice/list";
			}
			
		})
		$(".nav-item").on("click", function(){
			var navId = $(this).data("id");
			
			if(navId == "getWork"){
				mainWork(1, "get");
			}
			
			if(navId == "giveWork"){
				mainWork(1, "give");
			}
			
			if(navId == "unreadMail"){
				mainEmail(1, "unread");	
			}
			
			if(navId == "sendMail"){
				mainEmail(1, "send");	
			}
			
			if(navId == "receiveAutho"){
				mainAutho(1, "receive");	
			}
			
			if(navId == "sendAutho"){
				mainAutho(1, "send");	
			}
			
		})
		
	})
</script>
		